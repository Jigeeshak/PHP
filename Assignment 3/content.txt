<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 

  <title>PHP: Array Functions - Manual </title>

 <link rel="shortcut icon" href="http://php.net/favicon.ico">
 <link rel="search" type="application/opensearchdescription+xml" href="http://php.net/phpnetimprovedsearch.src" title="Add PHP.net search">
 <link rel="alternate" type="application/atom+xml" href="http://php.net/releases/feed.php" title="PHP Release feed">
 <link rel="alternate" type="application/atom+xml" href="http://php.net/feed.atom" title="PHP: Hypertext Preprocessor">

 <link rel="canonical" href="http://php.net/manual/en/ref.array.php">
 <link rel="shorturl" href="http://php.net/array">
 <link rel="alternate" href="http://php.net/array" hreflang="x-default">

 <link rel="contents" href="http://php.net/manual/en/index.php">
 <link rel="index" href="http://php.net/manual/en/book.array.php">
 <link rel="prev" href="http://php.net/manual/en/array.sorting.php">
 <link rel="next" href="http://php.net/manual/en/function.array-change-key-case.php">

 <link rel="alternate" href="http://php.net/manual/en/ref.array.php" hreflang="en">
 <link rel="alternate" href="http://php.net/manual/pt_BR/ref.array.php" hreflang="pt_BR">
 <link rel="alternate" href="http://php.net/manual/zh/ref.array.php" hreflang="zh">
 <link rel="alternate" href="http://php.net/manual/fr/ref.array.php" hreflang="fr">
 <link rel="alternate" href="http://php.net/manual/de/ref.array.php" hreflang="de">
 <link rel="alternate" href="http://php.net/manual/ja/ref.array.php" hreflang="ja">
 <link rel="alternate" href="http://php.net/manual/ro/ref.array.php" hreflang="ro">
 <link rel="alternate" href="http://php.net/manual/ru/ref.array.php" hreflang="ru">
 <link rel="alternate" href="http://php.net/manual/es/ref.array.php" hreflang="es">
 <link rel="alternate" href="http://php.net/manual/tr/ref.array.php" hreflang="tr">

<link rel="stylesheet" type="text/css" href="http://php.net/cached.php?t=1421837618&amp;f=/fonts/Fira/fira.css" media="screen">
<link rel="stylesheet" type="text/css" href="http://php.net/cached.php?t=1421837618&amp;f=/fonts/Font-Awesome/css/fontello.css" media="screen">
<link rel="stylesheet" type="text/css" href="http://php.net/cached.php?t=1478800802&amp;f=/styles/theme-base.css" media="screen">
<link rel="stylesheet" type="text/css" href="http://php.net/cached.php?t=1449787206&amp;f=/styles/theme-medium.css" media="screen">

 <!--[if lte IE 7]>
 <link rel="stylesheet" type="text/css" href="http://php.net/styles/workarounds.ie7.css" media="screen">
 <![endif]-->

 <!--[if lte IE 8]>
 <script type="text/javascript">
  window.brokenIE = true;
 </script>
 <![endif]-->

 <!--[if lte IE 9]>
 <link rel="stylesheet" type="text/css" href="http://php.net/styles/workarounds.ie9.css" media="screen">
 <![endif]-->

 <!--[if IE]>
 <script type="text/javascript" src="http://php.net/js/ext/html5.js"></script>
 <![endif]-->

 <base href="http://php.net/manual/en/ref.array.php">

</head>
<body class="docs ">

<nav id="head-nav" class="navbar navbar-fixed-top">
  <div class="navbar-inner clearfix">
    <a href="/" class="brand"><img src="/images/logos/php-logo.svg" width="48" height="24" alt="php"></a>
    <div id="mainmenu-toggle-overlay"></div>
    <input type="checkbox" id="mainmenu-toggle">
    <ul class="nav">
      <li class=""><a href="/downloads">Downloads</a></li>
      <li class="active"><a href="/docs.php">Documentation</a></li>
      <li class=""><a href="/get-involved" >Get Involved</a></li>
      <li class=""><a href="/support">Help</a></li>
    </ul>
    <form class="navbar-search" id="topsearch" action="/search.php">
      <input type="hidden" name="show" value="quickref">
      <input type="search" name="pattern" class="search-query" placeholder="Search" accesskey="s">
    </form>
  </div>
  <div id="flash-message"></div>
</nav>
<nav id="trick"><div><dl>
<dt><a href='/manual/en/getting-started.php'>Getting Started</a></dt>
	<dd><a href='/manual/en/introduction.php'>Introduction</a></dd>
	<dd><a href='/manual/en/tutorial.php'>A simple tutorial</a></dd>
<dt><a href='/manual/en/langref.php'>Language Reference</a></dt>
	<dd><a href='/manual/en/language.basic-syntax.php'>Basic syntax</a></dd>
	<dd><a href='/manual/en/language.types.php'>Types</a></dd>
	<dd><a href='/manual/en/language.variables.php'>Variables</a></dd>
	<dd><a href='/manual/en/language.constants.php'>Constants</a></dd>
	<dd><a href='/manual/en/language.expressions.php'>Expressions</a></dd>
	<dd><a href='/manual/en/language.operators.php'>Operators</a></dd>
	<dd><a href='/manual/en/language.control-structures.php'>Control Structures</a></dd>
	<dd><a href='/manual/en/language.functions.php'>Functions</a></dd>
	<dd><a href='/manual/en/language.oop5.php'>Classes and Objects</a></dd>
	<dd><a href='/manual/en/language.namespaces.php'>Namespaces</a></dd>
	<dd><a href='/manual/en/language.errors.php'>Errors</a></dd>
	<dd><a href='/manual/en/language.exceptions.php'>Exceptions</a></dd>
	<dd><a href='/manual/en/language.generators.php'>Generators</a></dd>
	<dd><a href='/manual/en/language.references.php'>References Explained</a></dd>
	<dd><a href='/manual/en/reserved.variables.php'>Predefined Variables</a></dd>
	<dd><a href='/manual/en/reserved.exceptions.php'>Predefined Exceptions</a></dd>
	<dd><a href='/manual/en/reserved.interfaces.php'>Predefined Interfaces and Classes</a></dd>
	<dd><a href='/manual/en/context.php'>Context options and parameters</a></dd>
	<dd><a href='/manual/en/wrappers.php'>Supported Protocols and Wrappers</a></dd>
</dl>
<dl>
<dt><a href='/manual/en/security.php'>Security</a></dt>
	<dd><a href='/manual/en/security.intro.php'>Introduction</a></dd>
	<dd><a href='/manual/en/security.general.php'>General considerations</a></dd>
	<dd><a href='/manual/en/security.cgi-bin.php'>Installed as CGI binary</a></dd>
	<dd><a href='/manual/en/security.apache.php'>Installed as an Apache module</a></dd>
	<dd><a href='/manual/en/security.sessions.php'>Session Security</a></dd>
	<dd><a href='/manual/en/security.filesystem.php'>Filesystem Security</a></dd>
	<dd><a href='/manual/en/security.database.php'>Database Security</a></dd>
	<dd><a href='/manual/en/security.errors.php'>Error Reporting</a></dd>
	<dd><a href='/manual/en/security.globals.php'>Using Register Globals</a></dd>
	<dd><a href='/manual/en/security.variables.php'>User Submitted Data</a></dd>
	<dd><a href='/manual/en/security.magicquotes.php'>Magic Quotes</a></dd>
	<dd><a href='/manual/en/security.hiding.php'>Hiding PHP</a></dd>
	<dd><a href='/manual/en/security.current.php'>Keeping Current</a></dd>
<dt><a href='/manual/en/features.php'>Features</a></dt>
	<dd><a href='/manual/en/features.http-auth.php'>HTTP authentication with PHP</a></dd>
	<dd><a href='/manual/en/features.cookies.php'>Cookies</a></dd>
	<dd><a href='/manual/en/features.sessions.php'>Sessions</a></dd>
	<dd><a href='/manual/en/features.xforms.php'>Dealing with XForms</a></dd>
	<dd><a href='/manual/en/features.file-upload.php'>Handling file uploads</a></dd>
	<dd><a href='/manual/en/features.remote-files.php'>Using remote files</a></dd>
	<dd><a href='/manual/en/features.connection-handling.php'>Connection handling</a></dd>
	<dd><a href='/manual/en/features.persistent-connections.php'>Persistent Database Connections</a></dd>
	<dd><a href='/manual/en/features.safe-mode.php'>Safe Mode</a></dd>
	<dd><a href='/manual/en/features.commandline.php'>Command line usage</a></dd>
	<dd><a href='/manual/en/features.gc.php'>Garbage Collection</a></dd>
	<dd><a href='/manual/en/features.dtrace.php'>DTrace Dynamic Tracing</a></dd>
</dl>
<dl>
<dt><a href='/manual/en/funcref.php'>Function Reference</a></dt>
	<dd><a href='/manual/en/refs.basic.php.php'>Affecting PHP's Behaviour</a></dd>
	<dd><a href='/manual/en/refs.utilspec.audio.php'>Audio Formats Manipulation</a></dd>
	<dd><a href='/manual/en/refs.remote.auth.php'>Authentication Services</a></dd>
	<dd><a href='/manual/en/refs.utilspec.cmdline.php'>Command Line Specific Extensions</a></dd>
	<dd><a href='/manual/en/refs.compression.php'>Compression and Archive Extensions</a></dd>
	<dd><a href='/manual/en/refs.creditcard.php'>Credit Card Processing</a></dd>
	<dd><a href='/manual/en/refs.crypto.php'>Cryptography Extensions</a></dd>
	<dd><a href='/manual/en/refs.database.php'>Database Extensions</a></dd>
	<dd><a href='/manual/en/refs.calendar.php'>Date and Time Related Extensions</a></dd>
	<dd><a href='/manual/en/refs.fileprocess.file.php'>File System Related Extensions</a></dd>
	<dd><a href='/manual/en/refs.international.php'>Human Language and Character Encoding Support</a></dd>
	<dd><a href='/manual/en/refs.utilspec.image.php'>Image Processing and Generation</a></dd>
	<dd><a href='/manual/en/refs.remote.mail.php'>Mail Related Extensions</a></dd>
	<dd><a href='/manual/en/refs.math.php'>Mathematical Extensions</a></dd>
	<dd><a href='/manual/en/refs.utilspec.nontext.php'>Non-Text MIME Output</a></dd>
	<dd><a href='/manual/en/refs.fileprocess.process.php'>Process Control Extensions</a></dd>
	<dd><a href='/manual/en/refs.basic.other.php'>Other Basic Extensions</a></dd>
	<dd><a href='/manual/en/refs.remote.other.php'>Other Services</a></dd>
	<dd><a href='/manual/en/refs.search.php'>Search Engine Extensions</a></dd>
	<dd><a href='/manual/en/refs.utilspec.server.php'>Server Specific Extensions</a></dd>
	<dd><a href='/manual/en/refs.basic.session.php'>Session Extensions</a></dd>
	<dd><a href='/manual/en/refs.basic.text.php'>Text Processing</a></dd>
	<dd><a href='/manual/en/refs.basic.vartype.php'>Variable and Type Related Extensions</a></dd>
	<dd><a href='/manual/en/refs.webservice.php'>Web Services</a></dd>
	<dd><a href='/manual/en/refs.utilspec.windows.php'>Windows Only Extensions</a></dd>
	<dd><a href='/manual/en/refs.xml.php'>XML Manipulation</a></dd>
	<dd><a href='/manual/en/refs.ui.php'>GUI Extensions</a></dd>
</dl>
<dl>
<dt>Keyboard Shortcuts</dt><dt>?</dt>
<dd>This help</dd>
<dt>j</dt>
<dd>Next menu item</dd>
<dt>k</dt>
<dd>Previous menu item</dd>
<dt>g p</dt>
<dd>Previous man page</dd>
<dt>g n</dt>
<dd>Next man page</dd>
<dt>G</dt>
<dd>Scroll to bottom</dd>
<dt>g g</dt>
<dd>Scroll to top</dd>
<dt>g h</dt>
<dd>Goto homepage</dd>
<dt>g s</dt>
<dd>Goto search<br>(current page)</dd>
<dt>/</dt>
<dd>Focus search box</dd>
</dl></div></nav>
<div id="goto">
    <div class="search">
         <div class="text"></div>
         <div class="results"><ul></ul></div>
   </div>
</div>

  <div id="breadcrumbs" class="clearfix">
    <div id="breadcrumbs-inner">
          <div class="next">
        <a href="function.array-change-key-case.php">
          array_change_key_case &raquo;
        </a>
      </div>
              <div class="prev">
        <a href="array.sorting.php">
          &laquo; Sorting Arrays        </a>
      </div>
          <ul>
            <li><a href='index.php'>PHP Manual</a></li>      <li><a href='funcref.php'>Function Reference</a></li>      <li><a href='refs.basic.vartype.php'>Variable and Type Related Extensions</a></li>      <li><a href='book.array.php'>Arrays</a></li>      </ul>
    </div>
  </div>




<div id="layout" class="clearfix">
  <section id="layout-content">
  <div class="page-tools">
    <div class="change-language">
      <form action="/manual/change.php" method="get" id="changelang" name="changelang">
        <fieldset>
          <label for="changelang-langs">Change language:</label>
          <select onchange="document.changelang.submit()" name="page" id="changelang-langs">
            <option value='en/ref.array.php' selected="selected">English</option>
            <option value='pt_BR/ref.array.php'>Brazilian Portuguese</option>
            <option value='zh/ref.array.php'>Chinese (Simplified)</option>
            <option value='fr/ref.array.php'>French</option>
            <option value='de/ref.array.php'>German</option>
            <option value='ja/ref.array.php'>Japanese</option>
            <option value='ro/ref.array.php'>Romanian</option>
            <option value='ru/ref.array.php'>Russian</option>
            <option value='es/ref.array.php'>Spanish</option>
            <option value='tr/ref.array.php'>Turkish</option>
            <option value="help-translate.php">Other</option>
          </select>
        </fieldset>
      </form>
    </div>
    <div class="edit-bug">
      <a href="https://edit.php.net/?project=PHP&amp;perm=en/ref.array.php">Edit</a>
      <a href="https://bugs.php.net/report.php?bug_type=Documentation+problem&amp;manpage=ref.array">Report a Bug</a>
    </div>
  </div><div id="ref.array" class="reference">
 <h1 class="title">Array Functions</h1>
 <div class="partintro">
   <h1 class="title">See Also</h1>
   <p class="para">
    See also <span class="function"><a href="function.is-array.php" class="function">is_array()</a></span>, <span class="function"><a href="function.explode.php" class="function">explode()</a></span>,
    <span class="function"><a href="function.implode.php" class="function">implode()</a></span>, <span class="function"><a href="function.split.php" class="function">split()</a></span>,
    <span class="function"><a href="function.preg-split.php" class="function">preg_split()</a></span>, and <span class="function"><a href="function.unset.php" class="function">unset()</a></span>.
   </p>
 </div>

 































































































































































































































































































































































































































































































<h2>Table of Contents</h2><ul class="chunklist chunklist_reference"><li><a href="function.array-change-key-case.php">array_change_key_case</a> — Changes the case of all keys in an array</li><li><a href="function.array-chunk.php">array_chunk</a> — Split an array into chunks</li><li><a href="function.array-column.php">array_column</a> — Return the values from a single column in the input array</li><li><a href="function.array-combine.php">array_combine</a> — Creates an array by using one array for keys and another for its values</li><li><a href="function.array-count-values.php">array_count_values</a> — Counts all the values of an array</li><li><a href="function.array-diff-assoc.php">array_diff_assoc</a> — Computes the difference of arrays with additional index check</li><li><a href="function.array-diff-key.php">array_diff_key</a> — Computes the difference of arrays using keys for comparison</li><li><a href="function.array-diff-uassoc.php">array_diff_uassoc</a> — Computes the difference of arrays with additional index check which is performed by a user supplied callback function</li><li><a href="function.array-diff-ukey.php">array_diff_ukey</a> — Computes the difference of arrays using a callback function on the keys for comparison</li><li><a href="function.array-diff.php">array_diff</a> — Computes the difference of arrays</li><li><a href="function.array-fill-keys.php">array_fill_keys</a> — Fill an array with values, specifying keys</li><li><a href="function.array-fill.php">array_fill</a> — Fill an array with values</li><li><a href="function.array-filter.php">array_filter</a> — Filters elements of an array using a callback function</li><li><a href="function.array-flip.php">array_flip</a> — Exchanges all keys with their associated values in an array</li><li><a href="function.array-intersect-assoc.php">array_intersect_assoc</a> — Computes the intersection of arrays with additional index check</li><li><a href="function.array-intersect-key.php">array_intersect_key</a> — Computes the intersection of arrays using keys for comparison</li><li><a href="function.array-intersect-uassoc.php">array_intersect_uassoc</a> — Computes the intersection of arrays with additional index check, compares indexes by a callback function</li><li><a href="function.array-intersect-ukey.php">array_intersect_ukey</a> — Computes the intersection of arrays using a callback function on the keys for comparison</li><li><a href="function.array-intersect.php">array_intersect</a> — Computes the intersection of arrays</li><li><a href="function.array-key-exists.php">array_key_exists</a> — Checks if the given key or index exists in the array</li><li><a href="function.array-keys.php">array_keys</a> — Return all the keys or a subset of the keys of an array</li><li><a href="function.array-map.php">array_map</a> — Applies the callback to the elements of the given arrays</li><li><a href="function.array-merge-recursive.php">array_merge_recursive</a> — Merge two or more arrays recursively</li><li><a href="function.array-merge.php">array_merge</a> — Merge one or more arrays</li><li><a href="function.array-multisort.php">array_multisort</a> — Sort multiple or multi-dimensional arrays</li><li><a href="function.array-pad.php">array_pad</a> — Pad array to the specified length with a value</li><li><a href="function.array-pop.php">array_pop</a> — Pop the element off the end of array</li><li><a href="function.array-product.php">array_product</a> — Calculate the product of values in an array</li><li><a href="function.array-push.php">array_push</a> — Push one or more elements onto the end of array</li><li><a href="function.array-rand.php">array_rand</a> — Pick one or more random entries out of an array</li><li><a href="function.array-reduce.php">array_reduce</a> — Iteratively reduce the array to a single value using a callback function</li><li><a href="function.array-replace-recursive.php">array_replace_recursive</a> — Replaces elements from passed arrays into the first array recursively</li><li><a href="function.array-replace.php">array_replace</a> — Replaces elements from passed arrays into the first array</li><li><a href="function.array-reverse.php">array_reverse</a> — Return an array with elements in reverse order</li><li><a href="function.array-search.php">array_search</a> — Searches the array for a given value and returns the first corresponding key if successful</li><li><a href="function.array-shift.php">array_shift</a> — Shift an element off the beginning of array</li><li><a href="function.array-slice.php">array_slice</a> — Extract a slice of the array</li><li><a href="function.array-splice.php">array_splice</a> — Remove a portion of the array and replace it with something else</li><li><a href="function.array-sum.php">array_sum</a> — Calculate the sum of values in an array</li><li><a href="function.array-udiff-assoc.php">array_udiff_assoc</a> — Computes the difference of arrays with additional index check, compares data by a callback function</li><li><a href="function.array-udiff-uassoc.php">array_udiff_uassoc</a> — Computes the difference of arrays with additional index check, compares data and indexes by a callback function</li><li><a href="function.array-udiff.php">array_udiff</a> — Computes the difference of arrays by using a callback function for data comparison</li><li><a href="function.array-uintersect-assoc.php">array_uintersect_assoc</a> — Computes the intersection of arrays with additional index check, compares data by a callback function</li><li><a href="function.array-uintersect-uassoc.php">array_uintersect_uassoc</a> — Computes the intersection of arrays with additional index check, compares data and indexes by separate callback functions</li><li><a href="function.array-uintersect.php">array_uintersect</a> — Computes the intersection of arrays, compares data by a callback function</li><li><a href="function.array-unique.php">array_unique</a> — Removes duplicate values from an array</li><li><a href="function.array-unshift.php">array_unshift</a> — Prepend one or more elements to the beginning of an array</li><li><a href="function.array-values.php">array_values</a> — Return all the values of an array</li><li><a href="function.array-walk-recursive.php">array_walk_recursive</a> — Apply a user function recursively to every member of an array</li><li><a href="function.array-walk.php">array_walk</a> — Apply a user supplied function to every member of an array</li><li><a href="function.array.php">array</a> — Create an array</li><li><a href="function.arsort.php">arsort</a> — Sort an array in reverse order and maintain index association</li><li><a href="function.asort.php">asort</a> — Sort an array and maintain index association</li><li><a href="function.compact.php">compact</a> — Create array containing variables and their values</li><li><a href="function.count.php">count</a> — Count all elements in an array, or something in an object</li><li><a href="function.current.php">current</a> — Return the current element in an array</li><li><a href="function.each.php">each</a> — Return the current key and value pair from an array and advance the array cursor</li><li><a href="function.end.php">end</a> — Set the internal pointer of an array to its last element</li><li><a href="function.extract.php">extract</a> — Import variables into the current symbol table from an array</li><li><a href="function.in-array.php">in_array</a> — Checks if a value exists in an array</li><li><a href="function.key-exists.php">key_exists</a> — Alias of array_key_exists</li><li><a href="function.key.php">key</a> — Fetch a key from an array</li><li><a href="function.krsort.php">krsort</a> — Sort an array by key in reverse order</li><li><a href="function.ksort.php">ksort</a> — Sort an array by key</li><li><a href="function.list.php">list</a> — Assign variables as if they were an array</li><li><a href="function.natcasesort.php">natcasesort</a> — Sort an array using a case insensitive &quot;natural order&quot; algorithm</li><li><a href="function.natsort.php">natsort</a> — Sort an array using a &quot;natural order&quot; algorithm</li><li><a href="function.next.php">next</a> — Advance the internal pointer of an array</li><li><a href="function.pos.php">pos</a> — Alias of current</li><li><a href="function.prev.php">prev</a> — Rewind the internal array pointer</li><li><a href="function.range.php">range</a> — Create an array containing a range of elements</li><li><a href="function.reset.php">reset</a> — Set the internal pointer of an array to its first element</li><li><a href="function.rsort.php">rsort</a> — Sort an array in reverse order</li><li><a href="function.shuffle.php">shuffle</a> — Shuffle an array</li><li><a href="function.sizeof.php">sizeof</a> — Alias of count</li><li><a href="function.sort.php">sort</a> — Sort an array</li><li><a href="function.uasort.php">uasort</a> — Sort an array with a user-defined comparison function and maintain index association</li><li><a href="function.uksort.php">uksort</a> — Sort an array by keys using a user-defined comparison function</li><li><a href="function.usort.php">usort</a> — Sort an array by values using a user-defined comparison function</li></ul>
</div>

<section id="usernotes">
 <div class="head">
  <span class="action"><a href="/manual/add-note.php?sect=ref.array&amp;redirect=http://php.net/manual/en/ref.array.php"><img src='/images/notes-add@2x.png' alt='add a note' width='12' height='12'> <small>add a note</small></a></span>
  <h3 class="title">User Contributed Notes <span class="count">11 notes</span></h3>
 </div><div id="allnotes">
  <div class="note" id="105907">  <div class="votes">
    <div id="Vu105907">
    <a href="/manual/vote-note.php?id=105907&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd105907">
    <a href="/manual/vote-note.php?id=105907&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V105907" title="58% like this...">
    17
    </div>
  </div>
  <a href="#105907" class="name">
  <strong class="user"><em>dave at davidhbrown dot us</em></strong></a><a class="genanchor" href="#105907"> &para;</a><div class="date" title="2011-09-24 11:57"><strong>6 years ago</strong></div>
  <div class="text" id="Hcom105907">
<div class="phpcode"><code><span class="html">
While PHP has well over three-score array functions, array_rotate is strangely missing as of PHP 5.3. Searching online offered several solutions, but the ones I found have defects such as inefficiently looping through the array or ignoring keys. <br /><br />The following array_rotate() function uses array_merge and array_shift to reliably rotate an array forwards or backwards, preserving keys. If you know you can trust your $array to be an array and $shift to be between 0 and the length of your array, you can skip the function definition and use just the return expression in your code.<br /><br /><span class="default">&lt;?php<br /></span><span class="keyword">function </span><span class="default">array_rotate</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">, </span><span class="default">$shift</span><span class="keyword">) {<br />&nbsp; &nbsp; if(!</span><span class="default">is_array</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">) || !</span><span class="default">is_numeric</span><span class="keyword">(</span><span class="default">$shift</span><span class="keyword">)) {<br />&nbsp; &nbsp; &nbsp; &nbsp; if(!</span><span class="default">is_array</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">)) </span><span class="default">error_log</span><span class="keyword">(</span><span class="default">__FUNCTION__</span><span class="keyword">.</span><span class="string">' expects first argument to be array; '</span><span class="keyword">.</span><span class="default">gettype</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">).</span><span class="string">' received.'</span><span class="keyword">);<br />&nbsp; &nbsp; &nbsp; &nbsp; if(!</span><span class="default">is_numeric</span><span class="keyword">(</span><span class="default">$shift</span><span class="keyword">)) </span><span class="default">error_log</span><span class="keyword">(</span><span class="default">__FUNCTION__</span><span class="keyword">.</span><span class="string">' expects second argument to be numeric; '</span><span class="keyword">.</span><span class="default">gettype</span><span class="keyword">(</span><span class="default">$shift</span><span class="keyword">).</span><span class="string">" `</span><span class="default">$shift</span><span class="string">` received."</span><span class="keyword">);<br />&nbsp; &nbsp; &nbsp; &nbsp; return </span><span class="default">$array</span><span class="keyword">;<br />&nbsp; &nbsp; }<br />&nbsp; &nbsp; </span><span class="default">$shift </span><span class="keyword">%= </span><span class="default">count</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">); </span><span class="comment">//we won't try to shift more than one array length<br />&nbsp; &nbsp; </span><span class="keyword">if(</span><span class="default">$shift </span><span class="keyword">&lt; </span><span class="default">0</span><span class="keyword">) </span><span class="default">$shift </span><span class="keyword">+= </span><span class="default">count</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">);</span><span class="comment">//handle negative shifts as positive<br />&nbsp; &nbsp; </span><span class="keyword">return </span><span class="default">array_merge</span><span class="keyword">(</span><span class="default">array_slice</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">, </span><span class="default">$shift</span><span class="keyword">, </span><span class="default">NULL</span><span class="keyword">, </span><span class="default">true</span><span class="keyword">), </span><span class="default">array_slice</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">, </span><span class="default">0</span><span class="keyword">, </span><span class="default">$shift</span><span class="keyword">, </span><span class="default">true</span><span class="keyword">));<br />}<br /></span><span class="default">?&gt;<br /></span>A few simple tests:<br /><span class="default">&lt;?php<br />$array</span><span class="keyword">=array(</span><span class="string">"foo"</span><span class="keyword">=&gt;</span><span class="default">1</span><span class="keyword">,</span><span class="string">"bar"</span><span class="keyword">=&gt;</span><span class="default">2</span><span class="keyword">,</span><span class="string">"baz"</span><span class="keyword">=&gt;</span><span class="default">3</span><span class="keyword">,</span><span class="default">4</span><span class="keyword">,</span><span class="default">5</span><span class="keyword">);<br /><br /></span><span class="default">print_r</span><span class="keyword">(</span><span class="default">array_rotate</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">, </span><span class="default">2</span><span class="keyword">));<br /></span><span class="default">print_r</span><span class="keyword">(</span><span class="default">array_rotate</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">, -</span><span class="default">2</span><span class="keyword">));<br /></span><span class="default">print_r</span><span class="keyword">(</span><span class="default">array_rotate</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">, </span><span class="default">count</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">)));<br /></span><span class="default">print_r</span><span class="keyword">(</span><span class="default">array_rotate</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">, </span><span class="string">"4"</span><span class="keyword">));<br /></span><span class="default">print_r</span><span class="keyword">(</span><span class="default">array_rotate</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">, -</span><span class="default">9</span><span class="keyword">));<br /></span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
  <div class="note" id="108546">  <div class="votes">
    <div id="Vu108546">
    <a href="/manual/vote-note.php?id=108546&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd108546">
    <a href="/manual/vote-note.php?id=108546&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V108546" title="53% like this...">
    10
    </div>
  </div>
  <a href="#108546" class="name">
  <strong class="user"><em>kolkabes at googlemail dot com</em></strong></a><a class="genanchor" href="#108546"> &para;</a><div class="date" title="2012-05-05 12:31"><strong>5 years ago</strong></div>
  <div class="text" id="Hcom108546">
<div class="phpcode"><code><span class="html">
Short function for making a recursive array copy while cloning objects on the way.<br /><br /><span class="default">&lt;?php<br /></span><span class="keyword">function </span><span class="default">arrayCopy</span><span class="keyword">( array </span><span class="default">$array </span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$result </span><span class="keyword">= array();<br />&nbsp; &nbsp; &nbsp; &nbsp; foreach( </span><span class="default">$array </span><span class="keyword">as </span><span class="default">$key </span><span class="keyword">=&gt; </span><span class="default">$val </span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if( </span><span class="default">is_array</span><span class="keyword">( </span><span class="default">$val </span><span class="keyword">) ) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$result</span><span class="keyword">[</span><span class="default">$key</span><span class="keyword">] = </span><span class="default">arrayCopy</span><span class="keyword">( </span><span class="default">$val </span><span class="keyword">);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } elseif ( </span><span class="default">is_object</span><span class="keyword">( </span><span class="default">$val </span><span class="keyword">) ) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$result</span><span class="keyword">[</span><span class="default">$key</span><span class="keyword">] = clone </span><span class="default">$val</span><span class="keyword">;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$result</span><span class="keyword">[</span><span class="default">$key</span><span class="keyword">] = </span><span class="default">$val</span><span class="keyword">;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; return </span><span class="default">$result</span><span class="keyword">;<br />}<br /></span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
  <div class="note" id="85785">  <div class="votes">
    <div id="Vu85785">
    <a href="/manual/vote-note.php?id=85785&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd85785">
    <a href="/manual/vote-note.php?id=85785&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V85785" title="50% like this...">
    0
    </div>
  </div>
  <a href="#85785" class="name">
  <strong class="user"><em>renatonascto at gmail dot com</em></strong></a><a class="genanchor" href="#85785"> &para;</a><div class="date" title="2008-09-17 11:11"><strong>9 years ago</strong></div>
  <div class="text" id="Hcom85785">
<div class="phpcode"><code><span class="html">
Big arrays use a lot of memory possibly resulting in memory limit errors. You can reduce memory usage on your script by destroying them as soon as you´re done with them. I was able to get over a few megabytes of memory by simply destroying some variables I didn´t use anymore. <br />You can view the memory usage/gain by using the funcion memory_get_usage(). Hope this helps!</span>
</code></div>
  </div>
 </div>
  <div class="note" id="111134">  <div class="votes">
    <div id="Vu111134">
    <a href="/manual/vote-note.php?id=111134&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd111134">
    <a href="/manual/vote-note.php?id=111134&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V111134" title="46% like this...">
    -4
    </div>
  </div>
  <a href="#111134" class="name">
  <strong class="user"><em>callmeanaguma at gmail dot com</em></strong></a><a class="genanchor" href="#111134"> &para;</a><div class="date" title="2013-01-18 11:30"><strong>5 years ago</strong></div>
  <div class="text" id="Hcom111134">
<div class="phpcode"><code><span class="html">
If you need to flattern two-dismensional array with single values assoc subarrays, you could use this function:<br /><br /><span class="default">&lt;?php<br /></span><span class="keyword">function </span><span class="default">arrayFlatten</span><span class="keyword">(</span><span class="default">$array</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$flattern </span><span class="keyword">= array();<br />&nbsp; &nbsp; &nbsp; &nbsp; foreach (</span><span class="default">$array </span><span class="keyword">as </span><span class="default">$key </span><span class="keyword">=&gt; </span><span class="default">$value</span><span class="keyword">){<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$new_key </span><span class="keyword">= </span><span class="default">array_keys</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$flattern</span><span class="keyword">[] = </span><span class="default">$value</span><span class="keyword">[</span><span class="default">$new_key</span><span class="keyword">[</span><span class="default">0</span><span class="keyword">]];<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; return </span><span class="default">$flattern</span><span class="keyword">;<br />}<br /></span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
  <div class="note" id="69237">  <div class="votes">
    <div id="Vu69237">
    <a href="/manual/vote-note.php?id=69237&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd69237">
    <a href="/manual/vote-note.php?id=69237&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V69237" title="43% like this...">
    -7
    </div>
  </div>
  <a href="#69237" class="name">
  <strong class="user"><em>ob at babcom dot biz</em></strong></a><a class="genanchor" href="#69237"> &para;</a><div class="date" title="2006-08-28 04:23"><strong>11 years ago</strong></div>
  <div class="text" id="Hcom69237">
<div class="phpcode"><code><span class="html">
Here is a function to find out the maximum depth of a multidimensional array.<br /><br /><span class="default">&lt;?php<br /></span><span class="comment">// return depth of given array<br />// if Array is a string ArrayDepth() will return 0<br />// usage: int ArrayDepth(array Array)<br /><br /></span><span class="keyword">function </span><span class="default">ArrayDepth</span><span class="keyword">(</span><span class="default">$Array</span><span class="keyword">,</span><span class="default">$DepthCount</span><span class="keyword">=-</span><span class="default">1</span><span class="keyword">,</span><span class="default">$DepthArray</span><span class="keyword">=array()) {<br />&nbsp; </span><span class="default">$DepthCount</span><span class="keyword">++;<br />&nbsp; if (</span><span class="default">is_array</span><span class="keyword">(</span><span class="default">$Array</span><span class="keyword">))<br />&nbsp; &nbsp; foreach (</span><span class="default">$Array </span><span class="keyword">as </span><span class="default">$Key </span><span class="keyword">=&gt; </span><span class="default">$Value</span><span class="keyword">)<br />&nbsp; &nbsp; &nbsp; </span><span class="default">$DepthArray</span><span class="keyword">[]=</span><span class="default">ArrayDepth</span><span class="keyword">(</span><span class="default">$Value</span><span class="keyword">,</span><span class="default">$DepthCount</span><span class="keyword">);<br />&nbsp; else<br />&nbsp; &nbsp; return </span><span class="default">$DepthCount</span><span class="keyword">;<br />&nbsp; foreach(</span><span class="default">$DepthArray </span><span class="keyword">as </span><span class="default">$Value</span><span class="keyword">)<br />&nbsp; &nbsp; </span><span class="default">$Depth</span><span class="keyword">=</span><span class="default">$Value</span><span class="keyword">&gt;</span><span class="default">$Depth</span><span class="keyword">?</span><span class="default">$Value</span><span class="keyword">:</span><span class="default">$Depth</span><span class="keyword">;<br />&nbsp; return </span><span class="default">$Depth</span><span class="keyword">;<br />}<br /></span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
  <div class="note" id="120716">  <div class="votes">
    <div id="Vu120716">
    <a href="/manual/vote-note.php?id=120716&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd120716">
    <a href="/manual/vote-note.php?id=120716&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V120716" title="35% like this...">
    -5
    </div>
  </div>
  <a href="#120716" class="name">
  <strong class="user"><em>Ewan</em></strong></a><a class="genanchor" href="#120716"> &para;</a><div class="date" title="2017-02-28 10:49"><strong>11 months ago</strong></div>
  <div class="text" id="Hcom120716">
<div class="phpcode"><code><span class="html">
I was looking for an array aggregation function here and ended up writing this one.<br /><br />Note: This implementation assumes that none of the fields you're aggregating on contain The '@' symbol.<br /><br /><span class="default">&lt;?php<br />&nbsp; </span><span class="keyword">function </span><span class="default">array_group_by</span><span class="keyword">(</span><span class="default">$flds</span><span class="keyword">, </span><span class="default">$arr</span><span class="keyword">) {<br />&nbsp; &nbsp; </span><span class="default">$groups </span><span class="keyword">= array();<br />&nbsp; &nbsp; foreach (</span><span class="default">$arr </span><span class="keyword">as </span><span class="default">$rec</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; </span><span class="default">$keys </span><span class="keyword">= </span><span class="default">array_map</span><span class="keyword">(function(</span><span class="default">$f</span><span class="keyword">) use(</span><span class="default">$rec</span><span class="keyword">) { return </span><span class="default">$rec</span><span class="keyword">[</span><span class="default">$f</span><span class="keyword">]; }, </span><span class="default">$flds</span><span class="keyword">);<br />&nbsp; &nbsp; &nbsp; </span><span class="default">$k </span><span class="keyword">= </span><span class="default">implode</span><span class="keyword">(</span><span class="string">'@'</span><span class="keyword">, </span><span class="default">$keys</span><span class="keyword">);<br />&nbsp; &nbsp; &nbsp; if (isset(</span><span class="default">$groups</span><span class="keyword">[</span><span class="default">$k</span><span class="keyword">])) {<br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$groups</span><span class="keyword">[</span><span class="default">$k</span><span class="keyword">][] = </span><span class="default">$rec</span><span class="keyword">;<br />&nbsp; &nbsp; &nbsp; } else {<br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$groups</span><span class="keyword">[</span><span class="default">$k</span><span class="keyword">] = array(</span><span class="default">$rec</span><span class="keyword">);<br />&nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; }<br />&nbsp; &nbsp; return </span><span class="default">$groups</span><span class="keyword">;<br />&nbsp; }<br /><br /></span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
  <div class="note" id="121054">  <div class="votes">
    <div id="Vu121054">
    <a href="/manual/vote-note.php?id=121054&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd121054">
    <a href="/manual/vote-note.php?id=121054&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V121054" title="25% like this...">
    -4
    </div>
  </div>
  <a href="#121054" class="name">
  <strong class="user"><em>DamianKaelGreen at gmail dot com</em></strong></a><a class="genanchor" href="#121054"> &para;</a><div class="date" title="2017-05-06 04:42"><strong>9 months ago</strong></div>
  <div class="text" id="Hcom121054">
<div class="phpcode"><code><span class="html">
While there are a lot of array functions in the PHP libs, there also seem to be a lot of rudimentary ones missing.<br /><br />I went ahead and created several of my own functions for handling multiple non-associative (na) arrays including:<br /><br />na_array_merge <br />na_array_intersect<br />na_array_diff<br />na_array_xnor<br />na_array_xor<br /><br />If you are using Venn diagrams to think about your arrays, then these functions might be for you. <br /><br />I have made them available and posted documentation for them here: <a href="https://www.greendingle.com/some-useful-non-associative-array-functions/" rel="nofollow" target="_blank">https://www.greendingle.com/some-useful-non-associative-array-functions/</a></span>
</code></div>
  </div>
 </div>
  <div class="note" id="76796">  <div class="votes">
    <div id="Vu76796">
    <a href="/manual/vote-note.php?id=76796&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd76796">
    <a href="/manual/vote-note.php?id=76796&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V76796" title="36% like this...">
    -16
    </div>
  </div>
  <a href="#76796" class="name">
  <strong class="user"><em>mo dot longman at gmail dot com</em></strong></a><a class="genanchor" href="#76796"> &para;</a><div class="date" title="2007-07-30 11:27"><strong>10 years ago</strong></div>
  <div class="text" id="Hcom76796">
<div class="phpcode"><code><span class="html">
to 2g4wx3:<br />i think better way for this is using JSON, if you have such module in your PHP. See json.org.<br /><br />to convert JS array to JSON string: arr.toJSONString();<br />to convert JSON string to PHP array: json_decode($jsonString);<br /><br />You can also stringify objects, numbers, etc.</span>
</code></div>
  </div>
 </div>
  <div class="note" id="78502">  <div class="votes">
    <div id="Vu78502">
    <a href="/manual/vote-note.php?id=78502&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd78502">
    <a href="/manual/vote-note.php?id=78502&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V78502" title="34% like this...">
    -16
    </div>
  </div>
  <a href="#78502" class="name">
  <strong class="user"><em>cyberchrist at futura dot net</em></strong></a><a class="genanchor" href="#78502"> &para;</a><div class="date" title="2007-10-15 06:33"><strong>10 years ago</strong></div>
  <div class="text" id="Hcom78502">
<div class="phpcode"><code><span class="html">
Lately, dealing with databases, I've been finding myself needing to know if one array, $a, is a proper subset of $b.<br /><br />Mathematically, this is asking (in set theory) [excuse the use of u and n instead of proper Unicode):<br /> <br />( A u B ) n ( ~ B )<br /><br />What this does is it first limits to known values, then looks for anything outside of B but in the union of A and B (which would be those things in A which are not also in B).<br /><br />If any value exists in this set, then A is NOT a proper subset of B, because a value exists in A but not in B.&nbsp; For A to be a proper subset, all values in A must be in B.<br /><br />I'm sure this could easily be done any number of ways but this seems to work for me.&nbsp; It's not got a lot of error detection such as sterilizing inputs or checking input types.<br /><br />// bool array_subset( array, array )<br />// Returns true if $a is a proper subset of $b, returns false otherwise.<br /><br />function array_subset( $a, $b )<br />{<br />&nbsp; &nbsp; if( count( array_diff( array_merge($a,$b), $b)) == 0 )<br />&nbsp; &nbsp; &nbsp; &nbsp; return true;<br />&nbsp; &nbsp; else<br />&nbsp; &nbsp; &nbsp; &nbsp; return false;<br />}</span>
</code></div>
  </div>
 </div>
  <div class="note" id="96914">  <div class="votes">
    <div id="Vu96914">
    <a href="/manual/vote-note.php?id=96914&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd96914">
    <a href="/manual/vote-note.php?id=96914&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V96914" title="32% like this...">
    -18
    </div>
  </div>
  <a href="#96914" class="name">
  <strong class="user"><em>oliverSPAMMENOT at e-geek dot com dot au</em></strong></a><a class="genanchor" href="#96914"> &para;</a><div class="date" title="2010-03-22 07:28"><strong>7 years ago</strong></div>
  <div class="text" id="Hcom96914">
<div class="phpcode"><code><span class="html">
Function to pretty print arrays and objects. Detects object recursion and allows setting a maximum depth. Based on arraytostring and u_print_r from the print_r function notes. Should be called like so: <br /><br /><span class="default">&lt;?php<br />egvaluetostring</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">)&nbsp;&nbsp; </span><span class="comment">//no max depth, or<br /></span><span class="default">egvaluetostring</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="default">$max_depth</span><span class="keyword">)&nbsp;&nbsp; </span><span class="comment">//max depth set<br /><br /></span><span class="keyword">function </span><span class="default">egvaluetostring</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="default">$max_depth</span><span class="keyword">, </span><span class="default">$key </span><span class="keyword">= </span><span class="default">NULL</span><span class="keyword">, </span><span class="default">$depth </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">, </span><span class="default">$refChain </span><span class="keyword">= array()) {<br />&nbsp; if(</span><span class="default">$depth </span><span class="keyword">&gt; </span><span class="default">0</span><span class="keyword">)<br />&nbsp; &nbsp; </span><span class="default">$tab </span><span class="keyword">= </span><span class="default">str_repeat</span><span class="keyword">(</span><span class="string">"\t"</span><span class="keyword">, </span><span class="default">$depth</span><span class="keyword">);<br />&nbsp; </span><span class="default">$text </span><span class="keyword">.= </span><span class="default">$tab </span><span class="keyword">. (</span><span class="default">$key </span><span class="keyword">!== </span><span class="default">NULL </span><span class="keyword">? </span><span class="default">$key </span><span class="keyword">. </span><span class="string">" =&gt; " </span><span class="keyword">: </span><span class="string">""</span><span class="keyword">);<br />&nbsp; <br />&nbsp; if (</span><span class="default">is_array</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">) || </span><span class="default">is_object</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">)) {<br />&nbsp; &nbsp; </span><span class="default">$recursion </span><span class="keyword">= </span><span class="default">FALSE</span><span class="keyword">;<br />&nbsp; &nbsp; if (</span><span class="default">is_object</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">)) {<br />&nbsp; &nbsp; &nbsp; foreach (</span><span class="default">$refChain </span><span class="keyword">as </span><span class="default">$refVal</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; &nbsp; if (</span><span class="default">$refVal </span><span class="keyword">=== </span><span class="default">$value</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$recursion </span><span class="keyword">= </span><span class="default">TRUE</span><span class="keyword">;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; </span><span class="default">array_push</span><span class="keyword">(</span><span class="default">$refChain</span><span class="keyword">, </span><span class="default">$value</span><span class="keyword">);<br />&nbsp; &nbsp; }<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; </span><span class="default">$text </span><span class="keyword">.= (</span><span class="default">is_array</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">) ? </span><span class="string">"array" </span><span class="keyword">: </span><span class="string">"object"</span><span class="keyword">) . </span><span class="string">" ( "</span><span class="keyword">;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; if (</span><span class="default">$recursion</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; </span><span class="default">$text </span><span class="keyword">.= </span><span class="string">"*RECURSION* "</span><span class="keyword">;<br />&nbsp; &nbsp; }<br />&nbsp; &nbsp; elseif (isset(</span><span class="default">$max_depth</span><span class="keyword">) &amp;&amp; </span><span class="default">$depth </span><span class="keyword">&gt;= </span><span class="default">$max_depth</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; </span><span class="default">$text </span><span class="keyword">.= </span><span class="string">"*MAX DEPTH REACHED* "</span><span class="keyword">;<br />&nbsp; &nbsp; }<br />&nbsp; &nbsp; else {<br />&nbsp; &nbsp; &nbsp; if (!empty(</span><span class="default">$value</span><span class="keyword">)) {<br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$text </span><span class="keyword">.= </span><span class="string">"\n"</span><span class="keyword">;<br />&nbsp; &nbsp; &nbsp; &nbsp; foreach (</span><span class="default">$value </span><span class="keyword">as </span><span class="default">$child_key </span><span class="keyword">=&gt; </span><span class="default">$child_value</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$text </span><span class="keyword">.= </span><span class="default">egvaluetostring</span><span class="keyword">(</span><span class="default">$child_value</span><span class="keyword">, </span><span class="default">$max_depth</span><span class="keyword">, (</span><span class="default">is_array</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">) ? </span><span class="string">"[" </span><span class="keyword">: </span><span class="string">""</span><span class="keyword">) . </span><span class="default">$child_key </span><span class="keyword">. (</span><span class="default">is_array</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">) ? </span><span class="string">"]" </span><span class="keyword">: </span><span class="string">""</span><span class="keyword">), </span><span class="default">$depth</span><span class="keyword">+</span><span class="default">1</span><span class="keyword">, </span><span class="default">$refChain</span><span class="keyword">) . </span><span class="string">",\n"</span><span class="keyword">;<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$text </span><span class="keyword">.= </span><span class="string">"\n" </span><span class="keyword">. </span><span class="default">$tab</span><span class="keyword">;<br />&nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; }<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; </span><span class="default">$text </span><span class="keyword">.= </span><span class="string">")"</span><span class="keyword">;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; if (</span><span class="default">is_object</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">)) {<br />&nbsp; &nbsp; &nbsp; </span><span class="default">array_pop</span><span class="keyword">(</span><span class="default">$refChain</span><span class="keyword">);<br />&nbsp; &nbsp; }<br />&nbsp; }<br />&nbsp; else {<br />&nbsp; &nbsp; </span><span class="default">$text </span><span class="keyword">.= </span><span class="string">"</span><span class="default">$value</span><span class="string">"</span><span class="keyword">;<br />&nbsp; }<br /><br />&nbsp; return </span><span class="default">$text</span><span class="keyword">;<br />}<br /></span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
  <div class="note" id="118266">  <div class="votes">
    <div id="Vu118266">
    <a href="/manual/vote-note.php?id=118266&amp;page=ref.array&amp;vote=up" title="Vote up!" class="usernotes-voteu">up</a>
    </div>
    <div id="Vd118266">
    <a href="/manual/vote-note.php?id=118266&amp;page=ref.array&amp;vote=down" title="Vote down!" class="usernotes-voted">down</a>
    </div>
    <div class="tally" id="V118266" title="25% like this...">
    -17
    </div>
  </div>
  <a href="#118266" class="name">
  <strong class="user"><em>nicoolasens at gmail dot com</em></strong></a><a class="genanchor" href="#118266"> &para;</a><div class="date" title="2015-11-06 10:15"><strong>2 years ago</strong></div>
  <div class="text" id="Hcom118266">
<div class="phpcode"><code><span class="html">
/*to change an index without rewriting the whole table and leave at the same place.<br />*/<br /><span class="default">&lt;?php<br /></span><span class="keyword">function </span><span class="default">change_index</span><span class="keyword">(&amp;</span><span class="default">$tableau</span><span class="keyword">, </span><span class="default">$old_key</span><span class="keyword">, </span><span class="default">$new_key</span><span class="keyword">) {<br />&nbsp; &nbsp; </span><span class="default">$changed </span><span class="keyword">= </span><span class="default">FALSE</span><span class="keyword">;<br />&nbsp; &nbsp; </span><span class="default">$temp </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">;<br />&nbsp; &nbsp; foreach (</span><span class="default">$tableau </span><span class="keyword">as </span><span class="default">$key </span><span class="keyword">=&gt; </span><span class="default">$value</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; &nbsp; switch (</span><span class="default">$changed</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case </span><span class="default">FALSE </span><span class="keyword">:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="comment">//creates the new key and deletes the old<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="keyword">if (</span><span class="default">$key </span><span class="keyword">== </span><span class="default">$old_key</span><span class="keyword">) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$tableau</span><span class="keyword">[</span><span class="default">$new_key</span><span class="keyword">] = </span><span class="default">$tableau</span><span class="keyword">[</span><span class="default">$old_key</span><span class="keyword">];<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unset(</span><span class="default">$tableau</span><span class="keyword">[</span><span class="default">$old_key</span><span class="keyword">]);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$changed </span><span class="keyword">= </span><span class="default">TRUE</span><span class="keyword">;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case </span><span class="default">TRUE </span><span class="keyword">:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="comment">//moves following keys<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="keyword">if (</span><span class="default">$key </span><span class="keyword">!= </span><span class="default">$new_key</span><span class="keyword">){<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$temp</span><span class="keyword">= </span><span class="default">$tableau</span><span class="keyword">[</span><span class="default">$key</span><span class="keyword">];<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unset(</span><span class="default">$tableau</span><span class="keyword">[</span><span class="default">$key</span><span class="keyword">]);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$tableau</span><span class="keyword">[</span><span class="default">$key</span><span class="keyword">] = </span><span class="default">$temp</span><span class="keyword">;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else {</span><span class="default">$changed </span><span class="keyword">= </span><span class="default">FALSE</span><span class="keyword">;} </span><span class="comment">//stop<br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="keyword">}<br />&nbsp; &nbsp; }<br />&nbsp; &nbsp; </span><span class="default">array_values</span><span class="keyword">(</span><span class="default">$tableau</span><span class="keyword">); </span><span class="comment">//free_memory<br /></span><span class="keyword">}<br /><br /></span><span class="comment">//Result : <br /></span><span class="default">$tableau </span><span class="keyword">= array(</span><span class="default">1</span><span class="keyword">, </span><span class="default">2 </span><span class="keyword">, </span><span class="default">3</span><span class="keyword">, </span><span class="default">4</span><span class="keyword">,</span><span class="default">5</span><span class="keyword">, </span><span class="default">6</span><span class="keyword">, </span><span class="default">7</span><span class="keyword">, </span><span class="default">8</span><span class="keyword">, </span><span class="default">9</span><span class="keyword">, </span><span class="default">10</span><span class="keyword">);<br /></span><span class="default">$res </span><span class="keyword">= </span><span class="default">print_r</span><span class="keyword">(</span><span class="default">$tableau</span><span class="keyword">, </span><span class="default">TRUE</span><span class="keyword">);<br /></span><span class="default">$longueur </span><span class="keyword">= </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$res</span><span class="keyword">) -</span><span class="default">1</span><span class="keyword">;<br />echo </span><span class="string">"Old array :\n" </span><span class="keyword">. </span><span class="default">substr</span><span class="keyword">(</span><span class="default">$res</span><span class="keyword">, </span><span class="default">8</span><span class="keyword">, </span><span class="default">$longueur</span><span class="keyword">) . </span><span class="string">"\n" </span><span class="keyword">;<br /><br /></span><span class="default">change_index </span><span class="keyword">(</span><span class="default">$tableau</span><span class="keyword">, </span><span class="default">2</span><span class="keyword">, </span><span class="string">'number 2'</span><span class="keyword">);<br /></span><span class="default">$res </span><span class="keyword">= </span><span class="default">print_r</span><span class="keyword">(</span><span class="default">$tableau</span><span class="keyword">, </span><span class="default">TRUE</span><span class="keyword">);<br /></span><span class="default">$longueur </span><span class="keyword">= </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$res</span><span class="keyword">) -</span><span class="default">10</span><span class="keyword">;<br />echo </span><span class="string">"New array :\n" </span><span class="keyword">. </span><span class="default">substr</span><span class="keyword">(</span><span class="default">$res</span><span class="keyword">, </span><span class="default">8</span><span class="keyword">, </span><span class="default">$longueur</span><span class="keyword">) . </span><span class="string">"\n" </span><span class="keyword">;<br /><br /></span><span class="comment">/*<br />Old array :<br />&nbsp; &nbsp; [0] =&gt; 1<br />&nbsp; &nbsp; [1] =&gt; 2<br />&nbsp; &nbsp; [2] =&gt; 3<br />&nbsp; &nbsp; [3] =&gt; 4<br />&nbsp; &nbsp; [4] =&gt; 5<br />&nbsp; &nbsp; [5] =&gt; 6<br />&nbsp; &nbsp; [6] =&gt; 7<br />&nbsp; &nbsp; [7] =&gt; 8<br />&nbsp; &nbsp; [8] =&gt; 9<br />&nbsp; &nbsp; [9] =&gt; 10<br />)<br /><br />New array :<br />&nbsp; &nbsp; [0] =&gt; 1<br />&nbsp; &nbsp; [1] =&gt; 2<br />&nbsp; &nbsp; [numéro 2] =&gt; 3<br />&nbsp; &nbsp; [3] =&gt; 4<br />&nbsp; &nbsp; [4] =&gt; 5<br />&nbsp; &nbsp; [5] =&gt; 6<br />&nbsp; &nbsp; [6] =&gt; 7<br />&nbsp; &nbsp; [7] =&gt; 8<br />&nbsp; &nbsp; [8] =&gt; 9<br />&nbsp; &nbsp; [9] =&gt; 10<br />*/<br /></span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div></div>

 <div class="foot"><a href="/manual/add-note.php?sect=ref.array&amp;redirect=http://php.net/manual/en/ref.array.php"><img src='/images/notes-add@2x.png' alt='add a note' width='12' height='12'> <small>add a note</small></a></div>
</section>    </section><!-- layout-content -->
        <aside class='layout-menu'>
    
        <ul class='parent-menu-list'>
                                    <li>
                <a href="book.array.php">Arrays</a>
    
                                    <ul class='child-menu-list'>
    
                          
                        <li class="">
                            <a href="intro.array.php" title="Introduction">Introduction</a>
                        </li>
                          
                        <li class="">
                            <a href="array.setup.php" title="Installing/Configuring">Installing/Configuring</a>
                        </li>
                          
                        <li class="">
                            <a href="array.constants.php" title="Predefined Constants">Predefined Constants</a>
                        </li>
                          
                        <li class="">
                            <a href="array.sorting.php" title="Sorting Arrays">Sorting Arrays</a>
                        </li>
                          
                        <li class="current">
                            <a href="ref.array.php" title="Array Functions">Array Functions</a>
                        </li>
                            
                    </ul>
                    
            </li>
                        
                    </ul>
    </aside>


  </div><!-- layout -->
         
  <footer>
    <div class="container footer-content">
      <div class="row-fluid">
      <ul class="footmenu">
        <li><a href="/copyright.php">Copyright &copy; 2001-2018 The PHP Group</a></li>
        <li><a href="/my.php">My PHP.net</a></li>
        <li><a href="/contact.php">Contact</a></li>
        <li><a href="/sites.php">Other PHP.net sites</a></li>
        <li><a href="/mirrors.php">Mirror sites</a></li>
        <li><a href="/privacy.php">Privacy policy</a></li>
      </ul>
      </div>
    </div>
  </footer>

    
 <!-- External and third party libraries. -->
 <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script type="text/javascript" src="http://php.net/cached.php?t=1421837618&amp;f=/js/ext/modernizr.js"></script>
<script type="text/javascript" src="http://php.net/cached.php?t=1421837618&amp;f=/js/ext/hogan-2.0.0.min.js"></script>
<script type="text/javascript" src="http://php.net/cached.php?t=1421837618&amp;f=/js/ext/typeahead.min.js"></script>
<script type="text/javascript" src="http://php.net/cached.php?t=1421837618&amp;f=/js/ext/mousetrap.min.js"></script>
<script type="text/javascript" src="http://php.net/cached.php?t=1421837618&amp;f=/js/search.js"></script>
<script type="text/javascript" src="http://php.net/cached.php?t=1516300802&amp;f=/js/common.js"></script>

<a id="toTop" href="javascript:;"><span id="toTopHover"></span><img width="40" height="40" alt="To Top" src="/images/to-top@2x.png"></a>

</body>
</html>

